{"version":3,"sources":["images/Rick-and-Morty-logo.png","components/Header.js","components/Footer.js","components/filters/FilterByName.js","components/filters/FilterBySpecies.js","components/filters/FilterByOrigin.js","components/ResetButton.js","components/filters/Filters.js","components/character/Character.js","components/character/CharacterList.js","components/character/CharacterDetail.js","services/getDataFromApi.js","images/rick-and-morty-fingers.png","components/NotFound.js","components/App.js","index.js"],"names":["Header","className","to","src","logo","title","alt","Footer","FilterByName","props","htmlFor","type","name","id","value","nameState","onChange","ev","handleFilter","key","target","FilterBySpecies","speciesState","FilterByOrigin","handleOrigin","originList","getSelected","map","origin","i","checked","originState","includes","ResetButton","onClick","handleReset","handleSubmit","preventDefault","Filters","onSubmit","filteredCharacters","Character","statusIcon","character","status","urlPath","image","species","ghostClass","CharacterList","message","arrangedList","length","CharacterDetail","charProps","selectedCharacter","genderIcon","gender","location","episodes","toLowerCase","getDataFromApi","fetch","then","response","json","data","results","episode","created","split","join","NotFound","fingers","App","useState","characters","setCharacters","setNameState","setSpeciesState","setOriginState","useEffect","filter","sort","a","z","exact","path","newValue","indexOrigin","indexOf","newOrigin","splice","getOrigin","Set","render","match","params","url","find","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4976e7c8.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/Rick-and-Morty-logo.de13d484.png\";","import logo from \"../images/Rick-and-Morty-logo.png\";\nimport \"../stylesheets/layout/_header.scss\";\nimport { Link } from \"react-router-dom\";\n\nconst Header = () => {\n  return (\n    <header className=\"header\">\n      <Link to=\"/\">\n        <img\n          className=\"header__img  animate__animated animate__pulse animate__slower animate__infinite\"\n          src={logo}\n          title=\"Ricky and Morty\"\n          alt=\"Ricky and Morty\"\n        />\n      </Link>\n    </header>\n  );\n};\n\nexport default Header;\n","import \"../stylesheets/layout/_footer.scss\";\n\nconst Footer = () => {\n  return (\n    <footer className=\"footer\">\n      <small className=\"footer__small\"> © 2021. Ana Apezteguía Martínez</small>\n    </footer>\n  );\n};\n\nexport default Footer;\n","import PropTypes from \"prop-types\";\n\nconst FilterByName = (props) => {\n  const handleChange = (ev) => {\n    props.handleFilter({\n      key: \"name\",\n      value: ev.target.value,\n    });\n  };\n  return (\n    <div className=\"form__search\">\n      <label className=\"form__label\" htmlFor=\"name\">\n        Name:{\" \"}\n        <input\n          className=\"form__input\"\n          type=\"text\"\n          name=\"name\"\n          id=\"name\"\n          value={props.nameState}\n          onChange={handleChange}\n        />\n      </label>\n    </div>\n  );\n};\nFilterByName.propTypes = {\n  nameState: PropTypes.string,\n  handleFilter: PropTypes.func,\n};\nexport default FilterByName;\n","import PropTypes from \"prop-types\";\n\nconst FilterBySpecies = (props) => {\n  const handleChange = (ev) => {\n    props.handleFilter({\n      key: \"speciesValue\",\n      value: ev.target.value,\n    });\n  };\n  return (\n    <div className=\"form__search\">\n      <label className=\"form__label\" htmlFor=\"species\">\n        Species:{\" \"}\n        <select\n          className=\"form__input species\"\n          name=\"speciesValue\"\n          id=\"species\"\n          value={props.speciesState}\n          onChange={handleChange}\n        >\n          <option value=\"noFilter\">Choose one</option>\n          <option value=\"Human\">Human</option>\n          <option value=\"Alien\">Alien</option>\n        </select>\n      </label>\n    </div>\n  );\n};\nFilterBySpecies.propTypes = {\n  speciesState: PropTypes.string,\n  handleFilter: PropTypes.func,\n};\nexport default FilterBySpecies;\n","import PropTypes from \"prop-types\";\n\nconst FilterByOrigin = (props) => {\n  const handleOrigin = (ev) => {\n    props.handleFilter({\n      key: \"origin\",\n      value: ev.target.value,\n    });\n  };\n\n  const originList = props.getSelected.map((origin, i) => {\n    return (\n      <label key={i} className=\"form__label--check\">\n        <input\n          type=\"checkbox\"\n          name=\"origin\"\n          className=\"form__input--check\"\n          value={origin}\n          onChange={handleOrigin}\n          checked={props.originState.includes(origin)}\n        />{\" \"}\n        <span className=\"form__input--name\">{origin}</span>\n      </label>\n    );\n  });\n  return (\n    <div className=\"form__search--check\">\n      <span className=\"labelName block\">Origin: </span>\n      {originList}\n    </div>\n  );\n};\nFilterByOrigin.propTypes = {\n  originState: PropTypes.array,\n  getSelected: PropTypes.array,\n  handleFilter: PropTypes.func,\n};\nexport default FilterByOrigin;\n","import PropTypes from \"prop-types\";\n\nconst ResetButton = (props) => {\n  const handleReset = () => {\n    props.handleReset();\n  };\n\n  return (\n    <input\n      type=\"button\"\n      name=\"reset\"\n      value=\"Reset\"\n      className=\"form__reset\"\n      onClick={handleReset}\n    />\n  );\n};\n\nResetButton.propTypes = {\n  handleReset: PropTypes.func,\n};\n\nexport default ResetButton;\n","import FilterByName from \"../filters/FilterByName\";\nimport FilterBySpecies from \"../filters/FilterBySpecies\";\nimport FilterByOrigin from \"../filters/FilterByOrigin\";\nimport ResetButton from \"../ResetButton\";\nimport \"../../stylesheets/layout/_filters.scss\";\nimport PropTypes from \"prop-types\";\n\nconst handleSubmit = (ev) => {\n  ev.preventDefault();\n};\nconst Filters = (props) => {\n  return (\n    <section className=\"filters\">\n      <div className=\"wrapper\">\n        <form onSubmit={handleSubmit} className=\"form\">\n          <h2 className=\"form__title\">Search by</h2>\n          <FilterByName\n            className=\"nameArea\"\n            handleFilter={props.handleFilter}\n            filteredCharacters={props.filteredCharacters}\n            nameState={props.nameState}\n          />\n          <FilterBySpecies\n            className=\"speciesArea\"\n            handleFilter={props.handleFilter}\n            speciesState={props.speciesState}\n          />\n          <FilterByOrigin\n            className=\"originArea\"\n            handleFilter={props.handleFilter}\n            getSelected={props.getSelected}\n            originState={props.originState}\n          />\n          <ResetButton className=\"resetArea\" handleReset={props.handleReset} />\n        </form>\n      </div>\n    </section>\n  );\n};\nFilters.propTypes = {\n  filteredCharacters: PropTypes.arrayOf(PropTypes.object),\n  nameState: PropTypes.string,\n  speciesState: PropTypes.string,\n  originState: PropTypes.array,\n  handleFilter: PropTypes.func,\n  handleReset: PropTypes.func,\n  getSelected: PropTypes.array,\n};\nexport default Filters;\n","import \"../../stylesheets/layout/_character.scss\";\nimport { Link } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\n\nconst Character = (props) => {\n  let statusIcon = \"\";\n  if (props.character.status === \"Dead\") {\n    statusIcon = \"fas fa-skull\";\n  } else if (props.character.status === \"Alive\") {\n    statusIcon = \"fas fa-heartbeat\";\n  } else {\n    statusIcon = \"fas fa-question-circle\";\n  }\n\n  return (\n    <article className=\"character animate__animated animate__flipInX\">\n      <Link to={`/character-details/${props.character.urlPath}`}>\n        <img\n          className=\"character__img\"\n          src={props.character.image}\n          alt={props.character.name}\n          title={props.character.name}\n        />\n        <div className=\"character__wrap\">\n          <h3 className=\"character__name\">{props.character.name}</h3>\n          <p className=\"character__species\">\n            {props.character.species}\n            <i\n              className={statusIcon}\n              title={`Status: ${props.character.status}`}\n            ></i>\n          </p>\n        </div>\n      </Link>\n    </article>\n  );\n};\nCharacter.propTypes = {\n  id: PropTypes.number,\n  src: PropTypes.string,\n  name: PropTypes.string,\n  species: PropTypes.string,\n  status: PropTypes.string,\n  urlPath: PropTypes.string,\n};\nexport default Character;\n","import \"../../stylesheets/layout/_charList.scss\";\nimport Character from \"./Character\";\nimport PropTypes from \"prop-types\";\n\nlet ghostClass = \"hidden\";\nconst CharacterList = (props) => {\n  let message = \"\";\n  let arrangedList = [];\n  if (props.filteredCharacters.length === 0) {\n    ghostClass = \"\";\n    message =\n      \"There is no character that matches your search. Please try again.\";\n  } else {\n    ghostClass = \"hidden\";\n    arrangedList = props.filteredCharacters.map((character) => {\n      return (\n        <li className=\"charList__list--item\" key={character.id}>\n          <Character character={character} />\n        </li>\n      );\n    });\n  }\n  return (\n    <section className=\"charList\">\n      <div className=\"wrapper\">\n        <h1 className=\"charList__title\">Characters</h1>\n        <p className={`charList__message ${ghostClass}`}>{message}</p>\n        <ul className=\"charList__list\">{arrangedList}</ul>\n      </div>\n    </section>\n  );\n};\nCharacterList.propTypes = {\n  character: PropTypes.object,\n  filteredCharacters: PropTypes.arrayOf(PropTypes.object),\n};\nexport default CharacterList;\n","import \"../../stylesheets/layout/_charDetail.scss\";\nimport { Link } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\n\nconst CharacterDetail = (props) => {\n  const charProps = props.selectedCharacter;\n  let statusIcon = \"\";\n  let genderIcon = \"\";\n  if (charProps.status === \"Dead\") {\n    statusIcon = \"fas fa-skull\";\n  } else if (charProps.status === \"Alive\") {\n    statusIcon = \"fas fa-heartbeat\";\n  } else {\n    statusIcon = \"fas fa-question-circle\";\n  }\n  if (charProps.gender === \"Male\") {\n    genderIcon = \"fas fa-mars\";\n  } else if (charProps.gender === \"Female\") {\n    genderIcon = \"fas fa-venus\";\n  } else {\n    genderIcon = \"fas fa-question-circle\";\n  }\n  return (\n    <section className=\"charDetail\">\n      <Link to=\"/\" className=\"charDetail__link\">\n        <i className=\"fas fa-arrow-alt-circle-left\">\n          <span className=\"charDetail__back\">Back</span>\n        </i>\n      </Link>\n      <div className=\"charDetail__wrap\">\n        <img\n          className=\"charDetail__img\"\n          src={charProps.image}\n          alt={charProps.name}\n          title={charProps.name}\n        />\n        <div className=\"charDetail__info\">\n          <h3 className=\"charDetail__info--name\">{charProps.name}</h3>\n          <p>Species: {charProps.species}</p>\n          <p>Origin: {charProps.origin}</p>\n          <p>Location: {charProps.location}</p>\n          <p>Appears in {charProps.episodes} episodes.</p>\n          <p>\n            Status:\n            <i\n              className={`${statusIcon} animate__animated animate__rubberBand`}\n              title={`Status: ${charProps.status}`}\n            ></i>\n            ({charProps.status.toLowerCase()})\n          </p>\n          <p>\n            Gender:\n            <i\n              className={`${genderIcon} animate__animated animate__rubberBand`}\n              title={`Gender: ${charProps.gender}`}\n            ></i>\n            ({charProps.gender.toLowerCase()})\n          </p>\n        </div>\n      </div>\n    </section>\n  );\n};\nCharacterDetail.propTypes = {\n  selectedCharacter: PropTypes.object,\n  src: PropTypes.string,\n  name: PropTypes.string,\n  species: PropTypes.string,\n  origin: PropTypes.string,\n  location: PropTypes.string,\n  gender: PropTypes.string,\n  status: PropTypes.string,\n  episodes: PropTypes.number,\n};\n\nexport default CharacterDetail;\n","const getDataFromApi = () => {\n  return fetch(\"//rickandmortyapi.com/api/character\")\n    .then((response) => response.json())\n    .then((data) => {\n      return data.results.map((character) => {\n        return {\n          id: character.id,\n          name: character.name,\n          status: character.status,\n          species: character.species,\n          type: character.type,\n          gender: character.gender,\n          origin: character.origin.name,\n          location: character.location.name,\n          image: character.image,\n          episodes: character.episode.length,\n          created: character.created,\n          urlPath: character.name.split(\" \").join(\"-\").toLowerCase(),\n        };\n      });\n    });\n};\nexport default getDataFromApi;\n","export default __webpack_public_path__ + \"static/media/rick-and-morty-fingers.11f4b1b2.png\";","import fingers from \"../images/rick-and-morty-fingers.png\";\nimport \"../stylesheets/layout/_notFound.scss\";\nimport { Link } from \"react-router-dom\";\nconst NotFound = () => {\n  return (\n    <section className=\"notFound\">\n      <div className=\"wrapper\">\n        <img src={fingers} alt=\"404 error\" title=\"404 error\" />\n        <h1 className=\"notFound__title\">404 Error</h1>\n        <p className=\"notFound__text\">\n          <span className=\"block\">Whooops!</span> Looks like this page doesn't\n          exist\n        </p>\n        <Link to=\"/\" className=\"notFound__link\">\n          <i className=\"fas fa-arrow-alt-circle-left\">\n            <span className=\"notFound__back\">Back</span>\n          </i>\n        </Link>\n      </div>\n    </section>\n  );\n};\n\nexport default NotFound;\n","import \"../stylesheets/App.scss\";\nimport React, { useEffect, useState } from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport Header from \"./Header\";\nimport Footer from \"./Footer\";\nimport Filters from \"./filters/Filters\";\nimport CharacterList from \"./character/CharacterList\";\nimport CharacterDetail from \"./character/CharacterDetail\";\nimport getDataFromApi from \"../services/getDataFromApi\";\nimport NotFound from \"./NotFound\";\n\nconst App = () => {\n  //declare states to control\n  const [characters, setCharacters] = useState([]);\n  const [nameState, setNameState] = useState(\"\");\n  const [speciesState, setSpeciesState] = useState(\"noFilter\");\n  const [originState, setOriginState] = useState([]);\n\n  // get data from API\n  useEffect(() => {\n    getDataFromApi().then((data) => setCharacters(data));\n  }, []);\n\n  // handle filter\n  const handleFilter = (newValue) => {\n    if (newValue.key === \"name\") {\n      setNameState(newValue.value);\n    } else if (newValue.key === \"speciesValue\") {\n      setSpeciesState(newValue.value);\n    } else if (newValue.key === \"origin\") {\n      const indexOrigin = originState.indexOf(newValue.value);\n      if (indexOrigin === -1) {\n        setOriginState([...originState, newValue.value]);\n      } else {\n        const newOrigin = [...originState];\n        newOrigin.splice(indexOrigin, 1);\n        setOriginState(newOrigin);\n      }\n    }\n  };\n  // extract origins to new array\n  const getSelected = () => {\n    // step1: map\n    const getOrigin = characters.map((character) => {\n      return character.origin;\n    });\n    // step 2: check for duplicates,if so it returns true (just for checking)\n    const checkForDuplicates = (array, keyName) => {\n      return new Set(array.map((item) => item[keyName])).size !== array.length;\n    };\n    // console.log(checkForDuplicates(getOrigin, origin));\n\n    // step 3: make a new array (this was a tough one! => OMG! number 2)\n    const uniqueOrigin = [...new Set(getOrigin)];\n\n    return uniqueOrigin;\n  };\n\n  // filters\n  const filteredCharacters = characters\n    .filter((character) => {\n      return character.name.toLowerCase().includes(nameState.toLowerCase());\n    })\n    .filter((character) => {\n      return speciesState === \"noFilter\"\n        ? true\n        : character.species === speciesState;\n    })\n    .filter((character) => {\n      return originState.length === 0\n        ? true\n        : originState.includes(character.origin);\n    })\n    .sort((a, z) => (a.name > z.name ? 1 : a.name < z.name ? -1 : 0));\n\n  // reset button\n  const handleReset = () => {\n    setNameState(\"\");\n    setSpeciesState(\"noFilter\");\n    setOriginState([]);\n  };\n\n  // render character detail page or not found\n  const renderCharacterDetail = (props) => {\n    //we specify here the param that goes after : at Route component => :url\n    const path = props.match.params.url;\n    const selectedCharacter = characters.find((character) => {\n      // urlPath is a prop I have specifically prepared at getDataFromApi to prepare the \"pretty url\" for SEO, out here did not work => OMG! number 1\n      return character.urlPath === path;\n    });\n    if (selectedCharacter) {\n      return <CharacterDetail selectedCharacter={selectedCharacter} />;\n    } else {\n      return <NotFound />;\n    }\n  };\n\n  // let's paint something\n  return (\n    <div className=\"App\">\n      <Header />\n      <main className=\"main\">\n        <Switch>\n          <Route exact path=\"/\">\n            <Filters\n              handleFilter={handleFilter}\n              nameState={nameState}\n              speciesState={speciesState}\n              getSelected={getSelected()}\n              originState={originState}\n              handleReset={handleReset}\n            />\n            <CharacterList filteredCharacters={filteredCharacters} />\n          </Route>\n          <Route\n            path=\"/character-details/:url\"\n            render={renderCharacterDetail}\n          />\n        </Switch>\n      </main>\n      <Footer />\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { HashRouter } from \"react-router-dom\";\nimport \"./stylesheets/index.scss\";\nimport App from \"./components/App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <HashRouter>\n      <App />\n    </HashRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}